@inject AppData appData
@inject NavigationManager navigation
@inherits Report

@using wSHSApp.Reports.DisciplineReport.Data;
@inject DisciplineReportDataFiller df;

<Modal @ref="modal" Closing="(t) => Rep!.RemoveReport()">
    <ModalContent Centered>
        <ModalHeader>
            <ModalTitle>@Rep?.Name</ModalTitle>
            <CloseButton />
        </ModalHeader>
        <ModalBody>
            <Field>
                @if (string.IsNullOrEmpty(reportDocument) && !isLoading)
                {
                    <center>@Rep?.Description</center>
                }
                else if (string.IsNullOrEmpty(reportDocument) && isLoading)
                {
                    <SpinKit Type="SpinKitType.Chase" Color="#318cbc" Size="40px" Centered />
                    <center style="font-size:xx-small; font-style:italic">@Rep?.Author</center>
                }
                else if (!string.IsNullOrEmpty(reportDocument))
                {
                    <center>
                        Запрашиваемый документ сформирован
                        <Button Color="Color.Success" Clicked="@(() => navigation?.NavigateTo(reportDocument, forceLoad: true))">Скачать</Button>
                    </center>
                }
            </Field>
        </ModalBody>
        <ModalFooter>
            <Button Disabled="isLoading" Color="Color.Secondary" Clicked="@(() => CloseClick(modal))">Закрыть</Button>
            <Button Disabled="isLoading" Color="Color.Primary" Clicked="@ReportClick">Сформировать</Button>
        </ModalFooter>
    </ModalContent>
</Modal>

@code {
    [Parameter] public IReport? Rep { set; get; }

    protected bool isLoading;

    protected Modal? modal;
    protected override void OnInitialized()
    {
        args = new();
        args.Add(appData.CurrentItemperson!);
        args?.Add("discipline.cs.docx");
        //df.FillTables();
    }
    protected List<string>? args;

    protected string? reportDocument;

    protected async Task ReportClick()
    {
        isLoading = true;
        reportDocument = null;
        StateHasChanged();
        reportDocument = await Rep!.EntryPoint(args!.ToArray());
        isLoading = false;
        StateHasChanged();
    }

    protected async void CloseClick(Modal? modal)
    {
        await Rep!.RemoveReport();
        modal?.Hide();
    }

    public override void Show()
    {
        reportDocument = null;
        modal?.Show();
    }

}