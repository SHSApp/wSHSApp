@page "/departures"
@attribute [Authorize]
@implements IDisposable

<PageTitle>Убытия</PageTitle>

@if (DepartureList == null)
{
    <Loading />
}
else if (DepartureList.Count > 0)
{
    <DepartureView DepartureInfo="@DepartureList" />
}
else if ((appData?.CurrentItemperson == null) || (appData?.CurrentItemperson == ""))
{
    <NoPrisoner />
}
else
{
    <NoData Message="Информации не найдено." />
}

@code {
    [Inject] private AppData? appData { get; set; }
    [Inject] private AdditionalInfoService AddInfoService { get; set; }
    [Inject] NavigationManager? Navigation { get; set; }
    private List<DepartureItem>? DepartureList;

    protected override void OnInitialized()
    {
        appData.OnChange += OnChangeHandler;
    }

    public void Dispose()
    {
        appData.OnChange -= OnChangeHandler;
    }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        OnChangeHandler();
    }

    private async void OnChangeHandler()
    {
        if (Navigation?.ToBaseRelativePath(Navigation.Uri) == "departures")
        {
            DepartureList = null;
            StateHasChanged();
            DepartureList = await AddInfoService.GetDeparturesInfoAsync(appData?.CurrentItemperson);
            StateHasChanged();
        }
    }
}